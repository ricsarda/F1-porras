import streamlit as st
import pandas as pd
import datetime

# Configuraci√≥n inicial
st.set_page_config(page_title="F1 Fantasy", layout="wide")

# Datos de Grandes Premios y Pilotos
grandes_premios = {
    "Australia": {"fecha": "2025-03-16", "sprint": False},
    "China": {"fecha": "2025-03-23", "sprint": True},
    "Jap√≥n": {"fecha": "2025-04-06", "sprint": False},
    "Bahr√©in": {"fecha": "2025-04-13", "sprint": False},
    "Arabia Saud√≠": {"fecha": "2025-04-20", "sprint": False},
    "Miami": {"fecha": "2025-05-04", "sprint": True},
    "Italia (Imola)": {"fecha": "2025-05-18", "sprint": False},
    "M√≥naco": {"fecha": "2025-05-25", "sprint": False},
    "Espa√±a": {"fecha": "2025-06-01", "sprint": False},
    "Canad√°": {"fecha": "2025-06-15", "sprint": False},
    "Austria": {"fecha": "2025-06-29", "sprint": True},
    "Reino Unido": {"fecha": "2025-07-06", "sprint": False},
    "B√©lgica": {"fecha": "2025-07-27", "sprint": True},
    "Hungr√≠a": {"fecha": "2025-08-03", "sprint": False},
    "Pa√≠ses Bajos": {"fecha": "2025-08-31", "sprint": False},
    "Italia (Monza)": {"fecha": "2025-09-07", "sprint": False},
    "Singapur": {"fecha": "2025-09-21", "sprint": False},
    "Jap√≥n": {"fecha": "2025-10-12", "sprint": False},
    "Estados Unidos (Austin)": {"fecha": "2025-10-26", "sprint": True},
    "M√©xico": {"fecha": "2025-11-02", "sprint": False},
    "Brasil": {"fecha": "2025-11-16", "sprint": True},
    "Qatar": {"fecha": "2025-11-30", "sprint": True},
    "Abu Dhabi": {"fecha": "2025-12-07", "sprint": False}
}

pilotos = [
    "Max Verstappen", "Lando Norris", "Gabriel Bortoleto", "Isack Hadjar", "Jack Doohan",
    "Pierre Gasly", "Andrea Kimi Antonelli", "Fernando Alonso", "Charles Leclerc", "Lewis Hamilton",
    "Liam Lawson", "George Russell", "Oscar Piastri", "Lance Stroll", "Yuki Tsunoda",
    "Alexander Albon", "Nico H√ºlkenberg", "Esteban Ocon", "Oliver Bearman", "Carlos Sainz", "Franco Colapinto"
]

# Cargar o inicializar datos
@st.cache(allow_output_mutation=True)
def load_data():
    return {"predictions": pd.DataFrame(columns=["Jugador", "Gran Premio", "Tipo", "P1", "P2", "P3", "Fecha"]),
            "scores": pd.DataFrame(columns=["Jugador", "Puntos Totales"])}

data = load_data()

# Funci√≥n para registrar una predicci√≥n
def save_prediction(jugador, gran_premio, tipo, p1, p2, p3):
    now = datetime.datetime.now()
    nueva_prediccion = pd.DataFrame({
        "Jugador": [jugador],
        "Gran Premio": [gran_premio],
        "Tipo": [tipo],
        "P1": [p1],
        "P2": [p2],
        "P3": [p3],
        "Fecha": [now]
    })
    data["predictions"] = pd.concat([data["predictions"], nueva_prediccion], ignore_index=True)

# Interfaz de predicci√≥n
st.title("üèéÔ∏è F1 Fantasy Predictor")
st.subheader("Registra tu predicci√≥n para la pr√≥xima sesi√≥n")

jugador = st.selectbox("Selecciona tu nombre", ["Maggi", "Pi√©", "Ric"])
gran_premio = st.selectbox("Selecciona el Gran Premio", list(grandes_premios.keys()))
tipo = st.radio("Tipo de sesi√≥n", ["Clasificaci√≥n", "Clasificaci√≥n Sprint", "Sprint", "Carrera"])

# Verificar si el GP seleccionado tiene sprint
disabled_sprint = tipo in ["Clasificaci√≥n Sprint", "Sprint"] and not grandes_premios[gran_premio]["sprint"]
if disabled_sprint:
    st.warning(f"El Gran Premio de {gran_premio} no tiene sesi√≥n de {tipo}. Por favor, selecciona otro tipo de sesi√≥n.")
else:
    p1 = st.selectbox("Piloto en P1", pilotos)
    p2 = st.selectbox("Piloto en P2", pilotos, index=1)
    p3 = st.selectbox("Piloto en P3", pilotos, index=2)

    if st.button("Guardar Predicci√≥n"):
        save_prediction(jugador, gran_premio, tipo, p1, p2, p3)
        st.success("Predicci√≥n guardada con √©xito!")

# Mostrar tabla de predicciones actuales
st.subheader("üìä Predicciones registradas")
st.dataframe(data["predictions"])
